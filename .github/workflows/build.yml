name: Build

on:
  workflow_call:
    inputs:
      host:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      host:
        type: choice
        description: Host
        required: true
        options:
          - pi3-direct
          - pi3-uboot
          - pi4-direct
          - pi4-uboot
          - pi5-direct
          - pi5-uboot
      debug_enabled:
        type: boolean
        description: Start tmate debug session
        required: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      # for: releases, magic-nix-cache
      contents: write
      # for: magic-nix-cache
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          enable_kvm: true
          extra_nix_config: |
            system-features = kvm big-parallel
            extra-platforms = aarch64-linux
            extra-substituters = https://cache.garnix.io
            extra-trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g=

      - name: Run the Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v2
        with:
          diagnostic-endpoint: ""

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Build image
        run: nix build -v --extra-experimental-features "nix-command flakes" --print-out-paths -L '.#nixosConfigurations.${{ inputs.host }}.config.system.build.image'

      - name: Compress image
        run: zip -qq -r nixos-${{ inputs.host }}.zip `find -L ./result -iname "*nixos*"`

      - name: Upload artifact to action
        uses: actions/upload-artifact@v4
        with:
          # this will be double-zipped, boo
          name: nixos-${{ inputs.host }}.zip
          path: nixos-${{ inputs.host }}.zip
          if-no-files-found: error
          compression-level: 0
          overwrite: true

      - name: Upload artifact to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: nixos-${{ inputs.host }}.zip